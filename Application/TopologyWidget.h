#ifndef TOPOLOGYWIDGET_H
#define TOPOLOGYWIDGET_H

#include <QWidget>
#include <QList>
#include <QVBoxLayout>
#include "GuiPart/LayerEditWidget.h"
#include "Project/TopologyEditModel.h"
#include "GuiPart/NetParamWidget.h"
namespace Ui{class TopologyWidget;}

/**
 * Contains main application graphical user interface classes.
 */
namespace Application{

/**
 * The TopologyWidget class.
 */
class TopologyWidget : public QWidget{
	Q_OBJECT

	public:
        TopologyWidget(QWidget *parent = 0);
		~TopologyWidget();
		void setModel(TopologyEditModel* model);
		bool hasModel();

	private slots:
		void closeBtnPressed();
		void widgetPressed(LayerEditWidget* widget);
		void appendLayer();
		void duplicateLayer(LayerEditWidget* widget);
		void removeLayer(LayerEditWidget* widget);
		void duplicateSelected();
		void removeSelected();
		void countChanged(LayerEditWidget* widget, int count);
		void modelChanged(ChangeType type);

    private:
		void fillWeightTable();
		int selectedLayer();
		void makeView();
		void clearView();

	signals:
        /** Emmited when close button is pressed. */
		void closePressed(BaseModel*);

	private:
        /** Autogenerated stuff, user interface class pointer. */
		Ui::TopologyWidget *ui;
        /** List of LayerEditWidget class pointers. */
		QList<LayerEditWidget*> layerEditList;
        /** List of lines between layer edit widgets. */
		QList<QFrame*> layerLineList;
        /** Contains layer edit widgets and lines between them. */
		QVBoxLayout* layerEditLayout;
        /** Current model pointer. */
		TopologyEditModel* model;
        /** NetParamWidget class pointer. */
		NetParamWidget* npw;
};

}

#endif // TOPOLOGYWIDGET_H
